#!/usr/bin/env python
# coding: utf-8

# In[ ]:


import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="√âtape 4 - Synth√®se", page_icon="images.png")

# Titre principal stylis√©
st.markdown(
    "<h1 style='text-align: center; color: #003366;'>√âtape 4 : Synth√®se des Risques et Recommandations</h1>",
    unsafe_allow_html=True
)

# V√©rification que les √©valuations sont disponibles
if 'evaluations' not in st.session_state:
    st.warning("Veuillez d'abord compl√©ter l'√©tape d‚Äô√©valuation.")
    st.stop()

evaluations = pd.DataFrame(st.session_state['evaluations'])

# Sous-titre stylis√©
st.markdown("<h3 style='color: #003366;'>R√©sum√© des risques √©valu√©s</h3>", unsafe_allow_html=True)
st.dataframe(evaluations)

# Classement par niveau de risque
top_risks = evaluations.sort_values(by="Score de Risque", ascending=False)

# Autre sous-titre stylis√©
st.markdown("<h3 style='color: #003366;'>Top 5 des risques les plus √©lev√©s :</h3>", unsafe_allow_html=True)
st.dataframe(top_risks.head(5))

# Graphique interactif des scores de risque
fig = px.bar(
    top_risks,
    x='Actif',
    y='Score de Risque',
    color='Menace',
    barmode='group',
    title="Scores de Risque par Actif et Menace"
)
st.plotly_chart(fig)

# Sous-titre recommandations
st.markdown("<h3 style='color: #003366;'>Recommandations g√©n√©rales :</h3>", unsafe_allow_html=True)

# Recommandations et explications enrichies

def get_detailed_recommendation(menace):
    menace = menace.lower()
    if "phishing" in menace:
        return "Former les employ√©s √† rep√©rer les e-mails frauduleux, utiliser un filtre anti-phishing et activer l‚Äôauthentification √† deux facteurs."
    elif "malware" in menace or "ransomware" in menace:
        return "Installer un antivirus √† jour, effectuer des sauvegardes r√©guli√®res hors ligne et limiter les privil√®ges d‚Äôacc√®s aux fichiers sensibles."
    elif "intrusion" in menace or "acc√®s non autoris√©" in menace:
        return "Renforcer les mots de passe, utiliser des connexions s√©curis√©es (VPN) et surveiller les journaux d‚Äôacc√®s."
    elif "fuite" in menace or "vol de donn√©es" in menace:
        return "Mettre en ≈ìuvre le chiffrement des donn√©es sensibles, restreindre l‚Äôacc√®s par r√¥le, et surveiller les transferts de donn√©es sortants."
    elif "erreur humaine" in menace:
        return "Mettre en place des proc√©dures de validation, former les utilisateurs et r√©aliser des simulations r√©guli√®res d‚Äôincident."
    elif "attaque ddos" in menace:
        return "Utiliser des services de protection DDoS, renforcer l‚Äôinfrastructure r√©seau et contacter son h√©bergeur pour des solutions de mitigation."
    elif "vuln√©rabilit√©" in menace or "mise √† jour" in menace:
        return "Planifier des mises √† jour r√©guli√®res, utiliser des outils de d√©tection de vuln√©rabilit√©s et d√©sinstaller les logiciels obsol√®tes."
    else:
        return "Mettre en place une politique de s√©curit√© adapt√©e, sensibiliser le personnel et r√©aliser des audits r√©guliers."


def get_detailed_explanation(menace):
    menace = menace.lower()
    if "phishing" in menace:
        return "Le phishing vise √† tromper l‚Äôutilisateur pour lui soutirer des informations sensibles (identifiants, mots de passe) via de faux messages ou sites."
    elif "malware" in menace or "ransomware" in menace:
        return "Un logiciel malveillant peut chiffrer, d√©truire ou voler vos donn√©es. Les ransomwares exigent souvent une ran√ßon pour restaurer l‚Äôacc√®s."
    elif "intrusion" in menace or "acc√®s non autoris√©" in menace:
        return "Une intrusion correspond √† un acc√®s sans autorisation aux syst√®mes ou donn√©es, mena√ßant leur int√©grit√© et confidentialit√©."
    elif "fuite" in menace or "vol de donn√©es" in menace:
        return "Une fuite de donn√©es survient lorsqu‚Äôune information sensible est expos√©e, souvent de mani√®re involontaire, √† des tiers non autoris√©s."
    elif "erreur humaine" in menace:
        return "Les erreurs humaines, comme une mauvaise configuration ou l‚Äôenvoi d‚Äôinformations au mauvais destinataire, sont √† l‚Äôorigine de nombreuses failles."
    elif "attaque ddos" in menace:
        return "Une attaque DDoS vise √† rendre un service indisponible en saturant les ressources r√©seau ou syst√®me via de multiples requ√™tes."
    elif "vuln√©rabilit√©" in menace or "mise √† jour" in menace:
        return "Les vuln√©rabilit√©s sont des failles techniques exploitables si elles ne sont pas corrig√©es par des mises √† jour r√©guli√®res."
    else:
        return "Cette menace peut impacter la disponibilit√©, l‚Äôint√©grit√© ou la confidentialit√© de vos syst√®mes ou donn√©es."

# Affichage Streamlit enrichi

for _, row in top_risks.head(3).iterrows():
    menace = row['Menace']
    actif = row['Actif']
    score = row['Score de Risque']

    recommandation = get_detailed_recommendation(menace)
    explication = get_detailed_explanation(menace)

    st.markdown(f"""
    - **{actif} - {menace}** : Risque √©lev√© d√©tect√© (**Score : {score}**)
        - üîç **Explication** : {explication}
        - ‚úÖ **Action recommand√©e** : {recommandation}
    """)


# Message de fin stylis√©
st.markdown(
    "<div style='text-align: center; color: #003366; font-size: 18px; padding-top: 20px;'>"
    "‚úÖ Analyse termin√©e ! Vous pouvez revenir en arri√®re pour modifier vos r√©ponses si besoin."
    "</div>",
    unsafe_allow_html=True
)

